image: gradle:alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/itpw/0.0.1"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - upload
  - release
  - scheduled-tag

build:
  stage: build
  rules:
  - if: '$CI_PIPELINE_SOURCE == "schedule"'
    when: never
  - if: $CI_COMMIT_TAG
    when: never
  - if: '$CI_COMMIT_BRANCH != "master"'
  script: ./gradlew --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

build-weekly:
  stage: build
  rules:
    - if: '$TYPE == "snapshot"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - ./gradlew --build-cache assemble
    - mv "build/libs/Idle theme park world-all.jar" .
    - mv "./Idle theme park world-all.jar" "./ITPW.jar"
  artifacts:
    name: "Build$(date +\"%Y%m%d\")"
    paths:
      - ITPW.jar
    expire_in: 1 week


build-master:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: $CI_COMMIT_TAG
  script: 
    - ./gradlew --build-cache assemble
    - mv "build/libs/Idle theme park world-all.jar" .
    - mv "./Idle theme park world-all.jar" "./ITPW.jar"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    name: 'Build-$CI_COMMIT_REF_NAME'
    paths:
      - ITPW.jar
    expire_in: 1 day

test:
  stage: test
  script: gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./ITPW.jar ${PACKAGE_REGISTRY_URL}/ITPW-${CI_COMMIT_TAG}.jar'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - release-cli create --name "$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG --assets-link "{\"name\":\"ITPW.jar\",\"url\":\"${PACKAGE_REGISTRY_URL}/ITPW-${CI_COMMIT_TAG}.jar\"}"

scheduled-tag:
  image:
    name: alpine/git
    entrypoint: [""]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $TYPE == "snapshot"'
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote rm api-origin
    - git remote add api-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@szofttech.inf.elte.hu/${CI_PROJECT_PATH}
    - git tag -a "Snapshot$(date +%Y%m)" -m "Auto-Release"
    - git push api-origin "Snapshot$(date +%Y%m)"

